{
	"info": {
		"_postman_id": "af40cd9d-f903-42b2-a11e-d34894edebbb",
		"name": "Lista",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "21600145"
	},
	"item": [
		{
			"name": "get",
			"item": [
				{
					"name": "get all carts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://fakestoreapi.com/carts"
					},
					"response": []
				},
				{
					"name": "get specific cart based on id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"get cart with id = 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://fakestoreapi.com/carts/1"
					},
					"response": []
				},
				{
					"name": "get carts with limit return results",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakestoreapi.com/carts?limit=5",
							"protocol": "https",
							"host": [
								"fakestoreapi",
								"com"
							],
							"path": [
								"carts"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "post",
			"item": [
				{
					"name": "add product a cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"productId\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"1\",\r\n    \"userId\":\"1\",\r\n    \"date\":\"2024-10-09\",\r\n    \"products\":[{\"productId\":1,\"quantity\":2}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://fakestoreapi.com/carts"
					},
					"response": []
				}
			]
		},
		{
			"name": "put",
			"item": [
				{
					"name": "update a cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"date must be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.date).to.eql(\"2024-11-26\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"1\",\r\n    \"userId\":\"1\",\r\n    \"date\":\"2024-11-26\",\r\n    \"products\":[{\"productId\":1,\"quantity\":4}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://fakestoreapi.com/carts/1"
					},
					"response": []
				},
				{
					"name": "update a cart without id cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"1\",\r\n    \"userId\":\"1\",\r\n    \"date\":\"2024-10-09\",\r\n    \"products\":[{\"productId\":1,\"quantity\":4}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://fakestoreapi.com/carts"
					},
					"response": []
				}
			]
		},
		{
			"name": "delete",
			"item": [
				{
					"name": "delete cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://fakestoreapi.com/carts/1"
					},
					"response": []
				},
				{
					"name": "delete cart without id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://fakestoreapi.com/carts"
					},
					"response": []
				}
			]
		}
	]
}